#!/usr/bin/env ruby

# Status Mahasiswa Amikom Yogyakarta (amk-mhs)
# Copyright (C) 2014 Ramdziana Feri Yustitianto 
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require "rubygems"
require "bundler/setup"

require "uri"
require "open-uri"
require "net/http"
require "nokogiri"
require "optparse"

options = {}
op = OptionParser.new do |opts|
	opts.banner = "Penggunaan: amk-mhs [OPTION] nim\n\nOPTION:"

	opts.on("-v","--version","Tampilkan versi") do 
		puts "Status mahasiswa Amikom Yogyakarta - Unofficial v1.1\n(amk-mhs)\n(c) 2014 - Ramdziana Feri Yustitianto"
		exit
	end
	opts.on("-h","--help","Tampilkan halaman ini") do |h|
		options[:help] = h
		puts opts
		exit
	end
	opts.on("-f","--foto DIR", "Download foto ke direktori DIR") do |f|
		options[:foto] = f
	end
end

begin
	op.parse!(ARGV)
rescue OptionParser::InvalidOption => e
	puts op
	exit
end

def filename(uri)
	/([^\/]+)(?=\.\w+$)/.match(uri)
end

uri = 'http://amikom.ac.id/index.php/status/'
params = {nim: ARGV,cek: 'Cek status &raquo;'}
begin
	res = Net::HTTP.post_form(URI.parse(uri),params)
	page = Nokogiri::HTML(res.body)
    
    comments = page.xpath("//comment()")
    comments[1].replace(comments[1].text)

	puts "NIM\t:\t#{page.css('div.npm').text}\n
Nama\t:\t#{page.css('div.nama').text}\n
Jurusan\t:\t#{page.css('div.jurusan').text}\n
Status\t:\t#{page.css('div.status').text}\n"

	if options[:foto]
		puts "\nFoto\t:\t#{page.at('img.foto')['src']}"
		puts "\nUnduh foto ke direktori #{options[:foto]} .."
		File.open("#{options[:foto]}/#{filename(page.at('img.foto')['src'])}.jpg", 'wb') do |f|
		  f.write(open(page.at('img.foto')['src']).read)
		end
	end
rescue
	puts "Maafkan ayah dan bunda, koneksi internet anda putus"
end

#!/usr/bin/env ruby

# Status Mahasiswa Amikom Yogyakarta (amk-mhs)
# Copyright (C) 2014 Ramdziana Feri Yustitianto

require "rubygems"
require "bundler/setup"
require "open-uri"
require "nokogiri"
require "optparse"
require "timeout"

class Amk
  VERSION = "1.1.1"

  def initialize(args)
    @args = args
    @options = {}
  end

  def run
    if options?
      if inet_connect?
        get_mhs(@options[:foto])
      else
        puts "Bad hair day! Your internet connection is lost or too sloooowww ..."
        exit
      end
    else
      puts "Please refers to '-h' or '--help' to show help"
    end
  end

  protected

  def inet_connect?
    begin
      Timeout::timeout(10) {
        true if open("http://amikom.ac.id")
      }
    rescue
      false
    end
  end

  def options?
    options = {}
    op = OptionParser.new do |opts|
      opts.banner = "Usage: amk-mhs [OPTION] NIM"
      opts.separator "\nOPTION:"

      opts.on("-v","--version","amk-mhs's version") do
        get_version
        exit
      end
      opts.on("-h","--help","Help page") do
        puts opts
        exit
      end
      opts.on("-f","--foto DIR", "Download photo at DIR directory") do |f|
        @options[:foto] = f
      end
    end

    op.parse!(@args) rescue return false
    true
  end

  def set_filename(uri)
    /([^\/]+)(?=\.\w+$)/.match(uri)
  end

  def get_version
    puts "Status mahasiswa Amikom Yogyakarta (amk-mhs) v#{VERSION}"
    puts "Copyright (c) Ramdziana Feri Yustitianto"
  end

  def get_photo(photo_url,dir_save)
    puts "Foto\t:\t#{photo_url}"
    Net::HTTP.start("amikom.ac.id") do |http|
      res = http.get(photo_url)
      open("#{dir_save}/#{set_filename(photo_url)}.jpg", "wb") do |file|
        file.write(res.body)
      end
    end
  end

  def get_mhs(photo_dir)
    uri = 'http://amikom.ac.id/index.php/status/'
    params = { nim: @args, cek: 'Cek status &raquo;' }

    res = Net::HTTP.post_form(URI.parse(uri),params)
    page = Nokogiri::HTML(res.body)
    comments = page.xpath("//comment()")
    comments[1].replace(comments[1].text)

    npm = page.css('div.npm').text
    nama = page.css('div.nama').text
    jurusan = page.css('div.jurusan').text
    status = page.css('div.status').text

    puts "NIM\t:\t#{npm}\n\n"
    puts "Nama\t:\t#{nama}\n\n"
    puts "Jurusan\t:\t#{jurusan}\n\n"
    puts "Status\t:\t#{status}\n\n"

    unless photo_dir.nil?
      photo_url = page.at('img.foto')['src']
      get_photo(photo_url,photo_dir)
    end
  end
end

amk = Amk.new(ARGV)
amk.run
